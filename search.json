[{"path":"https://rundel.github.io/markermd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://rundel.github.io/markermd/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://rundel.github.io/markermd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Colin Rundel. Author, maintainer.","code":""},{"path":"https://rundel.github.io/markermd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rundel C (2025). markermd: Interactive Shiny-Based Grading Interface R Markdown Assignments. R package version 0.0.0.9000, https://rundel.github.io/markermd/.","code":"@Manual{,   title = {markermd: Interactive Shiny-Based Grading Interface for R Markdown Assignments},   author = {Colin Rundel},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://rundel.github.io/markermd/}, }"},{"path":"https://rundel.github.io/markermd/index.html","id":"markermd","dir":"","previous_headings":"","what":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"Interactive Shiny-Based Grading Interface R Markdown Assignments markermd provides comprehensive Shiny-based interface grading assignments submitted git repositories containing R Markdown Quarto documents. features template creation validation rules, interactive AST tree visualization, question-based grading workflows, automated validation systems.","code":""},{"path":"https://rundel.github.io/markermd/index.html","id":"id_️-experimental-status","dir":"","previous_headings":"","what":"⚠️ Experimental Status","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"package currently experimental development. APIs may change significantly, features may fully stable. Use caution production environments. project also experimental exercise “vibe” coding claude code - implementation details thoroughly evaluated lot wonkiness throughout codebase.","code":""},{"path":"https://rundel.github.io/markermd/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"📝 Template Creation: Interactive interface creating grading templates validation rules 🌳 AST Visualization: Explore document structure interactive abstract syntax trees ✅ Automated Validation: Define apply validation rules check assignment requirements 📊 Question-Based Grading: Organize grading around specific questions customizable rubrics ⌨️ Hotkey Support: Fast grading workflows keyboard shortcuts 🔗 GitHub Integration: Support local directories remote GitHub repositories 📋 Export Options: Export grades feedback various formats (Coming soon)","code":""},{"path":"https://rundel.github.io/markermd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"can install development version markermd GitHub:","code":"# Install from GitHub # install.packages(\"pak\") pak::pak(\"rundel/markermd\")  # Or using remotes remotes::install_github(\"rundel/markermd\")"},{"path":"https://rundel.github.io/markermd/index.html","id":"dependencies","dir":"","previous_headings":"Installation","what":"Dependencies","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"markermd relies development version parsermd parsing R Markdown Quarto documents:","code":"remotes::install_github(\"rundel/parsermd\")"},{"path":"https://rundel.github.io/markermd/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"Coming soon …","code":""},{"path":[]},{"path":"https://rundel.github.io/markermd/index.html","id":"id_1-template-creation-template","dir":"","previous_headings":"Core Workflows","what":"1. Template Creation (template())","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"template creation interface allows : Load explore assignment interactive AST tree representation Map specific AST nodes (headings, code chunks, etc.) assignment questions Define validation rules (content checks, node counts, etc.) question Save reusable templates consistent grading","code":""},{"path":"https://rundel.github.io/markermd/index.html","id":"id_2-assignment-grading-mark","dir":"","previous_headings":"Core Workflows","what":"2. Assignment Grading (mark())","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"grading interface provides: Validation Tab: Automated checking assignment requirements resources Rubric Tab: Question--question grading customizable point values","code":""},{"path":"https://rundel.github.io/markermd/index.html","id":"repository-structure","dir":"","previous_headings":"","what":"Repository Structure","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"markermd expects assignments organized : GitHub repository integration, package can automatically: - Clone repositories GitHub - Sync updates remote repositories","code":"assignments/ ├── student1-repo/ │   ├── assignment.qmd  # or .Rmd │   └── ... ├── student2-repo/ │   ├── assignment.qmd │   └── ... └── ..."},{"path":[]},{"path":"https://rundel.github.io/markermd/index.html","id":"template-creation-interface","dir":"","previous_headings":"Examples","what":"Template Creation Interface","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"template interface shows: - Document AST tree node selection - Question management panel - Validation rule configuration - Template save/load functionality","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rundel.github.io/markermd/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"markermd active development. Contributions, bug reports, feature requests welcome!","code":""},{"path":"https://rundel.github.io/markermd/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Interactive Shiny-Based Grading Interface for R Markdown Assignments","text":"GPL (>= 3)","code":""},{"path":"https://rundel.github.io/markermd/reference/add_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Question to Template — add_question","title":"Add Question to Template — add_question","text":"Add Question Template","code":""},{"path":"https://rundel.github.io/markermd/reference/add_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Question to Template — add_question","text":"","code":"add_question(tmpl, q)"},{"path":"https://rundel.github.io/markermd/reference/add_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Question to Template — add_question","text":"tmpl template object q question object","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert template_metadata to List — as.list.markermd_metadata","title":"Convert template_metadata to List — as.list.markermd_metadata","text":"Convert template_metadata List","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert template_metadata to List — as.list.markermd_metadata","text":"","code":"# S3 method for class 'markermd_metadata' as.list(x, ...)"},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert template_metadata to List — as.list.markermd_metadata","text":"x template_metadata object ... Additional arguments (currently unused)","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_node_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert node_selection to List — as.list.markermd_node_selection","title":"Convert node_selection to List — as.list.markermd_node_selection","text":"Convert node_selection List","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_node_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert node_selection to List — as.list.markermd_node_selection","text":"","code":"# S3 method for class 'markermd_node_selection' as.list(x, ...)"},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_node_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert node_selection to List — as.list.markermd_node_selection","text":"x node_selection object ... Additional arguments (currently unused)","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert question to List — as.list.markermd_question","title":"Convert question to List — as.list.markermd_question","text":"Convert question List","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert question to List — as.list.markermd_question","text":"","code":"# S3 method for class 'markermd_question' as.list(x, ...)"},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert question to List — as.list.markermd_question","text":"x question object ... Additional arguments (currently unused)","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert template to List — as.list.markermd_template","title":"Convert template to List — as.list.markermd_template","text":"Convert template List","code":""},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert template to List — as.list.markermd_template","text":"","code":"# S3 method for class 'markermd_template' as.list(x, ...)"},{"path":"https://rundel.github.io/markermd/reference/as.list.markermd_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert template to List — as.list.markermd_template","text":"x template object ... Additional arguments (currently unused)","code":""},{"path":"https://rundel.github.io/markermd/reference/as_markermd_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert List to template_metadata — as_markermd_metadata","title":"Convert List to template_metadata — as_markermd_metadata","text":"Convert List template_metadata","code":""},{"path":"https://rundel.github.io/markermd/reference/as_markermd_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert List to template_metadata — as_markermd_metadata","text":"","code":"as_markermd_metadata(x)"},{"path":"https://rundel.github.io/markermd/reference/as_markermd_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert List to template_metadata — as_markermd_metadata","text":"x List metadata fields","code":""},{"path":"https://rundel.github.io/markermd/reference/as_markermd_node_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert List to node_selection — as_markermd_node_selection","title":"Convert List to node_selection — as_markermd_node_selection","text":"Convert List node_selection","code":""},{"path":"https://rundel.github.io/markermd/reference/as_markermd_node_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert List to node_selection — as_markermd_node_selection","text":"","code":"as_markermd_node_selection(x)"},{"path":"https://rundel.github.io/markermd/reference/as_markermd_node_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert List to node_selection — as_markermd_node_selection","text":"x Integer vector list indices","code":""},{"path":"https://rundel.github.io/markermd/reference/as_markermd_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert List to question — as_markermd_question","title":"Convert List to question — as_markermd_question","text":"Convert List question","code":""},{"path":"https://rundel.github.io/markermd/reference/as_markermd_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert List to question — as_markermd_question","text":"","code":"as_markermd_question(x)"},{"path":"https://rundel.github.io/markermd/reference/as_markermd_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert List to question — as_markermd_question","text":"x List id, name, selected_nodes fields","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_base_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Base AST Server — ast_base_server","title":"Base AST Server — ast_base_server","text":"Base AST Server","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_base_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base AST Server — ast_base_server","text":"","code":"ast_base_server(   id,   ast,   selected_nodes = shiny::reactive(integer(0)),   enable_preview = TRUE,   selection_mode = \"readonly\",   id_prefix = NULL )"},{"path":"https://rundel.github.io/markermd/reference/ast_base_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base AST Server — ast_base_server","text":"id Character. Module namespace ID ast Reactive. parsed AST object selected_nodes Reactive. Currently selected node indices (optional) enable_preview Logical. Whether enable preview functionality selection_mode Character. Selection mode (\"interactive\", \"readonly\", \"highlight_only\") id_prefix Character. Optional prefix button IDs avoid collisions","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_base_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"AST Module — ast_base_ui","title":"AST Module — ast_base_ui","text":"Shiny modules displaying AST tree structures various interaction modes Base AST UI","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_base_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AST Module — ast_base_ui","text":"","code":"ast_base_ui(id, title = \"Document Structure\", show_clear_button = FALSE)"},{"path":"https://rundel.github.io/markermd/reference/ast_base_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AST Module — ast_base_ui","text":"id Character. Module namespace ID title Character. Panel title (default: \"Document Structure\") show_clear_button Logical. Whether show clear selections button","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_readonly_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Read-Only AST Server — ast_readonly_server","title":"Read-Only AST Server — ast_readonly_server","text":"Read-AST Server","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_readonly_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read-Only AST Server — ast_readonly_server","text":"","code":"ast_readonly_server(   id,   ast,   selected_nodes = shiny::reactive(integer(0)),   enable_preview = TRUE,   id_prefix = NULL )"},{"path":"https://rundel.github.io/markermd/reference/ast_readonly_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read-Only AST Server — ast_readonly_server","text":"id Character. Module namespace ID ast Reactive. parsed AST object selected_nodes Reactive. Optional selected nodes highlight (default: none) enable_preview Logical. Whether enable preview functionality (default: TRUE) id_prefix Character. Optional prefix button IDs avoid collisions","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_readonly_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Read-Only AST UI — ast_readonly_ui","title":"Read-Only AST UI — ast_readonly_ui","text":"Read-AST UI","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_readonly_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read-Only AST UI — ast_readonly_ui","text":"","code":"ast_readonly_ui(id, title = \"Document Structure\")"},{"path":"https://rundel.github.io/markermd/reference/ast_readonly_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read-Only AST UI — ast_readonly_ui","text":"id Character. Module namespace ID title Character. Panel title (default: \"Document Structure\")","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_selectable_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Selectable AST Server — ast_selectable_server","title":"Selectable AST Server — ast_selectable_server","text":"Selectable AST Server","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_selectable_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selectable AST Server — ast_selectable_server","text":"","code":"ast_selectable_server(id, ast, selected_nodes = shiny::reactive(integer(0)))"},{"path":"https://rundel.github.io/markermd/reference/ast_selectable_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selectable AST Server — ast_selectable_server","text":"id Character. Module namespace ID ast Reactive. parsed AST object selected_nodes Reactive. Currently selected node indices","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_selectable_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Selectable AST UI — ast_selectable_ui","title":"Selectable AST UI — ast_selectable_ui","text":"Selectable AST UI","code":""},{"path":"https://rundel.github.io/markermd/reference/ast_selectable_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selectable AST UI — ast_selectable_ui","text":"","code":"ast_selectable_ui(id, title = \"Document Structure\")"},{"path":"https://rundel.github.io/markermd/reference/ast_selectable_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selectable AST UI — ast_selectable_ui","text":"id Character. Module namespace ID title Character. Panel title (default: \"Document Structure\")","code":""},{"path":"https://rundel.github.io/markermd/reference/check_archive_freshness.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if local archive is up to date — check_archive_freshness","title":"Check if local archive is up to date — check_archive_freshness","text":"Check local archive date","code":""},{"path":"https://rundel.github.io/markermd/reference/check_archive_freshness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if local archive is up to date — check_archive_freshness","text":"","code":"check_archive_freshness(cached_path, github_repo, metadata)"},{"path":"https://rundel.github.io/markermd/reference/check_archive_freshness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if local archive is up to date — check_archive_freshness","text":"cached_path Character string. Path cached archive file github_repo Character string. GitHub repository format \"owner/repo\" metadata Data frame. Archive metadata get_archive_metadata()","code":""},{"path":"https://rundel.github.io/markermd/reference/check_archive_freshness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if local archive is up to date — check_archive_freshness","text":"Logical. TRUE local file date, FALSE otherwise","code":""},{"path":"https://rundel.github.io/markermd/reference/create_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cache directory for artifacts — create_cache_dir","title":"Create cache directory for artifacts — create_cache_dir","text":"Create cache directory artifacts","code":""},{"path":"https://rundel.github.io/markermd/reference/create_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cache directory for artifacts — create_cache_dir","text":"","code":"create_cache_dir(collection_path)"},{"path":"https://rundel.github.io/markermd/reference/create_cache_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cache directory for artifacts — create_cache_dir","text":"collection_path Character string. Path collection directory","code":""},{"path":"https://rundel.github.io/markermd/reference/create_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cache directory for artifacts — create_cache_dir","text":"Character string. Path cache directory","code":""},{"path":"https://rundel.github.io/markermd/reference/create_markermd_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Shiny App for markermd — create_markermd_app","title":"Create Shiny App for markermd — create_markermd_app","text":"Internal function create Shiny application","code":""},{"path":"https://rundel.github.io/markermd/reference/create_markermd_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Shiny App for markermd — create_markermd_app","text":"","code":"create_markermd_app(   collection_path,   template_obj,   use_qmd,   collection,   repo_list,   validation_results,   initial_repo_ast,   initial_repo_name,   artifact_status,   repo_to_github,   template_path = NULL,   download_archives = TRUE )"},{"path":"https://rundel.github.io/markermd/reference/create_markermd_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Shiny App for markermd — create_markermd_app","text":"collection_path Character string. Path directory containing assignment repositories template_obj markermd_template S7 object node selections, NULL use_qmd Logical. Whether parse .qmd files (TRUE) .Rmd files (FALSE) collection Parsed collection data parsermd repo_list Character vector repository names validation_results List validation results repository initial_repo_ast Initial repository AST display initial_repo_name Name initial repository artifact_status List artifact availability status repository repo_to_github Named list mapping repository names GitHub repos template_path Character string. Path template file (optional) download_archives Logical. Whether archives downloaded launch","code":""},{"path":"https://rundel.github.io/markermd/reference/create_markermd_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Shiny App for markermd — create_markermd_app","text":"Shiny app object","code":""},{"path":"https://rundel.github.io/markermd/reference/create_question_card.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Question Card — create_question_card","title":"Create Question Card — create_question_card","text":"Creates single question validation card","code":""},{"path":"https://rundel.github.io/markermd/reference/create_question_card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Question Card — create_question_card","text":"","code":"create_question_card(   question,   question_result,   current_ast,   original_ast,   session )"},{"path":"https://rundel.github.io/markermd/reference/create_question_card.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Question Card — create_question_card","text":"question question object question_result validation result question current_ast current document AST original_ast original template AST session Shiny session object","code":""},{"path":"https://rundel.github.io/markermd/reference/create_question_card.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Question Card — create_question_card","text":"bslib card element","code":""},{"path":"https://rundel.github.io/markermd/reference/create_rule_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Rule Details Display — create_rule_details","title":"Create Rule Details Display — create_rule_details","text":"Creates rule details section question card","code":""},{"path":"https://rundel.github.io/markermd/reference/create_rule_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Rule Details Display — create_rule_details","text":"","code":"create_rule_details(question, question_result)"},{"path":"https://rundel.github.io/markermd/reference/create_rule_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Rule Details Display — create_rule_details","text":"question question object rules question_result validation result question","code":""},{"path":"https://rundel.github.io/markermd/reference/create_rule_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Rule Details Display — create_rule_details","text":"Shiny UI element rule details","code":""},{"path":"https://rundel.github.io/markermd/reference/create_rule_verb_inputs_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Create rule verb inputs directly (without reactive UI) — create_rule_verb_inputs_direct","title":"Create rule verb inputs directly (without reactive UI) — create_rule_verb_inputs_direct","text":"Create rule verb inputs directly (without reactive UI)","code":""},{"path":"https://rundel.github.io/markermd/reference/create_rule_verb_inputs_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create rule verb inputs directly (without reactive UI) — create_rule_verb_inputs_direct","text":"","code":"create_rule_verb_inputs_direct(verb, value, id, ns_func = NULL)"},{"path":"https://rundel.github.io/markermd/reference/create_rule_verb_inputs_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create rule verb inputs directly (without reactive UI) — create_rule_verb_inputs_direct","text":"verb Character. rule verb value Default values verb id Character. rule ID input naming ns_func Function. Namespace function proper input scoping","code":""},{"path":"https://rundel.github.io/markermd/reference/download_all_archives.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all archives with progress tracking — download_all_archives","title":"Download all archives with progress tracking — download_all_archives","text":"Download archives progress tracking","code":""},{"path":"https://rundel.github.io/markermd/reference/download_all_archives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all archives with progress tracking — download_all_archives","text":"","code":"download_all_archives(   github_repos,   repo_to_github,   collection_path,   progress_callback = NULL )"},{"path":"https://rundel.github.io/markermd/reference/download_all_archives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all archives with progress tracking — download_all_archives","text":"github_repos Character vector. GitHub repositories download repo_to_github Named list. Mapping local repo names GitHub repos collection_path Character string. Path collection directory progress_callback Function. Optional callback progress updates","code":""},{"path":"https://rundel.github.io/markermd/reference/download_all_archives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download all archives with progress tracking — download_all_archives","text":"List success status results","code":""},{"path":"https://rundel.github.io/markermd/reference/download_artifact_if_needed.html","id":null,"dir":"Reference","previous_headings":"","what":"Download artifact if not cached or forced — download_artifact_if_needed","title":"Download artifact if not cached or forced — download_artifact_if_needed","text":"Download artifact cached forced","code":""},{"path":"https://rundel.github.io/markermd/reference/download_artifact_if_needed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download artifact if not cached or forced — download_artifact_if_needed","text":"","code":"download_artifact_if_needed(   github_repo,   repo_name,   collection_path,   force = FALSE )"},{"path":"https://rundel.github.io/markermd/reference/download_artifact_if_needed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download artifact if not cached or forced — download_artifact_if_needed","text":"github_repo Character string. GitHub repository format \"owner/repo\" repo_name Character string. Local repository name collection_path Character string. Path collection directory force Logical. Whether force download even file exists","code":""},{"path":"https://rundel.github.io/markermd/reference/download_artifact_if_needed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download artifact if not cached or forced — download_artifact_if_needed","text":"List success status file path error message","code":""},{"path":"https://rundel.github.io/markermd/reference/get_allowed_node_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get allowed node types for rules — get_allowed_node_types","title":"Get allowed node types for rules — get_allowed_node_types","text":"Returns list valid node types can used validation rules. includes catch-\"node\" option specific parsermd node types.","code":""},{"path":"https://rundel.github.io/markermd/reference/get_allowed_node_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get allowed node types for rules — get_allowed_node_types","text":"","code":"get_allowed_node_types()"},{"path":"https://rundel.github.io/markermd/reference/get_allowed_node_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get allowed node types for rules — get_allowed_node_types","text":"Character vector allowed node types","code":""},{"path":"https://rundel.github.io/markermd/reference/get_allowed_rule_verbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get allowed verbs for rules — get_allowed_rule_verbs","title":"Get allowed verbs for rules — get_allowed_rule_verbs","text":"Returns list valid verification verbs can used validation rules. verb corresponds different type validation check.","code":""},{"path":"https://rundel.github.io/markermd/reference/get_allowed_rule_verbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get allowed verbs for rules — get_allowed_rule_verbs","text":"","code":"get_allowed_rule_verbs()"},{"path":"https://rundel.github.io/markermd/reference/get_allowed_rule_verbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get allowed verbs for rules — get_allowed_rule_verbs","text":"Character vector allowed rule verbs","code":""},{"path":"https://rundel.github.io/markermd/reference/get_archive_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get archive metadata from GitHub — get_archive_metadata","title":"Get archive metadata from GitHub — get_archive_metadata","text":"Get archive metadata GitHub","code":""},{"path":"https://rundel.github.io/markermd/reference/get_archive_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get archive metadata from GitHub — get_archive_metadata","text":"","code":"get_archive_metadata(github_repos)"},{"path":"https://rundel.github.io/markermd/reference/get_archive_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get archive metadata from GitHub — get_archive_metadata","text":"github_repos Character vector. GitHub repositories format \"owner/repo\"","code":""},{"path":"https://rundel.github.io/markermd/reference/get_archive_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get archive metadata from GitHub — get_archive_metadata","text":"Data frame repository artifact metadata","code":""},{"path":"https://rundel.github.io/markermd/reference/get_cached_artifact_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cached artifact path — get_cached_artifact_path","title":"Get cached artifact path — get_cached_artifact_path","text":"Get cached artifact path","code":""},{"path":"https://rundel.github.io/markermd/reference/get_cached_artifact_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cached artifact path — get_cached_artifact_path","text":"","code":"get_cached_artifact_path(collection_path, repo_name)"},{"path":"https://rundel.github.io/markermd/reference/get_cached_artifact_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cached artifact path — get_cached_artifact_path","text":"collection_path Character string. Path collection directory repo_name Character string. Repository name","code":""},{"path":"https://rundel.github.io/markermd/reference/get_cached_artifact_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cached artifact path — get_cached_artifact_path","text":"Character string. Path cached artifact file","code":""},{"path":"https://rundel.github.io/markermd/reference/get_default_rule_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default values for a rule verb — get_default_rule_values","title":"Get default values for a rule verb — get_default_rule_values","text":"Returns appropriate default values rule verb type. Used creating new rules resetting rule values.","code":""},{"path":"https://rundel.github.io/markermd/reference/get_default_rule_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default values for a rule verb — get_default_rule_values","text":"","code":"get_default_rule_values(verb)"},{"path":"https://rundel.github.io/markermd/reference/get_default_rule_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get default values for a rule verb — get_default_rule_values","text":"verb Character. rule verb","code":""},{"path":"https://rundel.github.io/markermd/reference/get_default_rule_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default values for a rule verb — get_default_rule_values","text":"Default values appropriate verb type","code":""},{"path":"https://rundel.github.io/markermd/reference/get_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Question by ID — get_question","title":"Get Question by ID — get_question","text":"Get Question ID","code":""},{"path":"https://rundel.github.io/markermd/reference/get_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Question by ID — get_question","text":"","code":"get_question(tmpl, id)"},{"path":"https://rundel.github.io/markermd/reference/get_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Question by ID — get_question","text":"tmpl template object id Integer question ID","code":""},{"path":"https://rundel.github.io/markermd/reference/get_question_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Validation Interface Module — get_question_content","title":"Mark Validation Interface Module — get_question_content","text":"Shiny module displaying validation results marking Get Question Content Display","code":""},{"path":"https://rundel.github.io/markermd/reference/get_question_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Validation Interface Module — get_question_content","text":"","code":"get_question_content(repo_ast, template_ast, question, session)"},{"path":"https://rundel.github.io/markermd/reference/get_question_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Validation Interface Module — get_question_content","text":"repo_ast current document AST template_ast original template AST question question object selected nodes session Shiny session object","code":""},{"path":"https://rundel.github.io/markermd/reference/get_question_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark Validation Interface Module — get_question_content","text":"Shiny UI element paragraph message","code":""},{"path":"https://rundel.github.io/markermd/reference/get_question_content.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark Validation Interface Module — get_question_content","text":"Creates content display question including tree structure","code":""},{"path":"https://rundel.github.io/markermd/reference/mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the markermd Shiny Application — mark","title":"Launch the markermd Shiny Application — mark","text":"Launch markermd Shiny Application","code":""},{"path":"https://rundel.github.io/markermd/reference/mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the markermd Shiny Application — mark","text":"","code":"mark(   collection_path,   template = NULL,   use_qmd = TRUE,   download_archives = TRUE,   ... )"},{"path":"https://rundel.github.io/markermd/reference/mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the markermd Shiny Application — mark","text":"collection_path Character string. Path directory containing subdirectories assignment repositories template Optional template validation. Can : Character path .rds file containing template data List raw template data (readRDS) List transformed templates (create_question_templates) NULL (template validation) use_qmd Logical. Whether parse .qmd files (TRUE) .Rmd files (FALSE). Default TRUE. download_archives Logical. Whether download archives app launch (TRUE) -demand (FALSE). Default TRUE. ... Additional arguments passed shiny::runApp()","code":""},{"path":"https://rundel.github.io/markermd/reference/mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the markermd Shiny Application — mark","text":"Launches Shiny application","code":""},{"path":"https://rundel.github.io/markermd/reference/mark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the markermd Shiny Application — mark","text":"","code":"if (FALSE) { # \\dontrun{ # Parse qmd files from collection of repositories mark(\"/path/to/assignments/\")  # Parse Rmd files from collection of repositories mark(\"/path/to/assignments/\", use_qmd = FALSE)  # Parse with template validation mark(\"/path/to/assignments/\", template = \"template.rds\")  # Disable upfront archive downloading mark(\"/path/to/assignments/\", download_archives = FALSE) } # }"},{"path":"https://rundel.github.io/markermd/reference/mark_grade_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Grade Server — mark_grade_server","title":"Mark Grade Server — mark_grade_server","text":"Server logic grade management S7 state management","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_grade_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Grade Server — mark_grade_server","text":"","code":"mark_grade_server(id, initial_grade, ui_ns = NULL)"},{"path":"https://rundel.github.io/markermd/reference/mark_grade_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Grade Server — mark_grade_server","text":"id Character. Module namespace ID initial_grade markermd_grade_state S7 object initial state ui_ns Function. Optional UI namespace function JavaScript element targeting","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_grade_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Grade Module - Clean Version — mark_grade_ui","title":"Mark Grade Module - Clean Version — mark_grade_ui","text":"Shiny module displaying managing question grades scoring options Mark Grade UI","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_grade_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Grade Module - Clean Version — mark_grade_ui","text":"","code":"mark_grade_ui(id, grade_state)"},{"path":"https://rundel.github.io/markermd/reference/mark_grade_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Grade Module - Clean Version — mark_grade_ui","text":"id Character. Module namespace ID grade_state markermd_grade_state S7 object containing grade properties","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_grade_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark Grade Module - Clean Version — mark_grade_ui","text":"Creates UI displaying current score grading configuration options","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_item_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Rubric Item Server — mark_rubric_item_server","title":"Mark Rubric Item Server — mark_rubric_item_server","text":"Server logic rubric item state management using S7 class","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_item_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Rubric Item Server — mark_rubric_item_server","text":"","code":"mark_rubric_item_server(id, initial_item)"},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_item_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Rubric Item Server — mark_rubric_item_server","text":"id Character. Module namespace ID initial_item markermd_rubric_item S7 object initial state","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_item_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Rubric Item Module — mark_rubric_item_ui","title":"Mark Rubric Item Module — mark_rubric_item_ui","text":"Shiny module individual rubric items hotkey selection point values Mark Rubric Item UI","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_item_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Rubric Item Module — mark_rubric_item_ui","text":"","code":"mark_rubric_item_ui(id, rubric_item)"},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_item_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Rubric Item Module — mark_rubric_item_ui","text":"id Character. Module namespace ID rubric_item markermd_rubric_item S7 object containing item properties","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_item_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark Rubric Item Module — mark_rubric_item_ui","text":"Creates UI single rubric item hotkey button description","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Rubric Server — mark_rubric_server","title":"Mark Rubric Server — mark_rubric_server","text":"Mark Rubric Server","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Rubric Server — mark_rubric_server","text":"","code":"mark_rubric_server(   id,   template,   artifact_status_reactive,   collection_path,   use_qmd,   collection,   on_question_change = NULL )"},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Rubric Server — mark_rubric_server","text":"id Character. Module namespace ID template markermd_template. Static template object containing questions artifact_status_reactive Reactive value. Artifact status repositories collection_path Character string. Path collection directory use_qmd Logical. Whether parse .qmd files (TRUE) .Rmd files (FALSE) collection Parsed collection data parsermd on_question_change Reactive function. Callback question selection changes","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Rubric Interface Module — mark_rubric_ui","title":"Mark Rubric Interface Module — mark_rubric_ui","text":"Shiny module displaying navigating rubric questions marking Mark Rubric UI","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Rubric Interface Module — mark_rubric_ui","text":"","code":"mark_rubric_ui(id)"},{"path":"https://rundel.github.io/markermd/reference/mark_rubric_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Rubric Interface Module — mark_rubric_ui","text":"id Character. Module namespace ID","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_validate_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Validation Server — mark_validate_server","title":"Mark Validation Server — mark_validate_server","text":"Mark Validation Server","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_validate_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Validation Server — mark_validate_server","text":"","code":"mark_validate_server(   id,   ast,   current_repo_name = shiny::reactiveVal(NULL),   validation_results = shiny::reactiveVal(NULL),   selected_question_name = shiny::reactiveVal(NULL),   template = shiny::reactiveVal(NULL) )"},{"path":"https://rundel.github.io/markermd/reference/mark_validate_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Validation Server — mark_validate_server","text":"id Character. Module namespace ID ast Reactive. parsed AST object current_repo_name Reactive. Current repository name validation_results Reactive. Validation results current repository selected_question_name Reactive. Currently selected question name template Reactive. Template object reference","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_validate_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Validation UI — mark_validate_ui","title":"Mark Validation UI — mark_validate_ui","text":"Mark Validation UI","code":""},{"path":"https://rundel.github.io/markermd/reference/mark_validate_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Validation UI — mark_validate_ui","text":"","code":"mark_validate_ui(id)"},{"path":"https://rundel.github.io/markermd/reference/mark_validate_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Validation UI — mark_validate_ui","text":"id Character. Module namespace ID","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"markermd: Interactive Shiny-Based Grading Interface for R Markdown Assignments — markermd-package","title":"markermd: Interactive Shiny-Based Grading Interface for R Markdown Assignments — markermd-package","text":"Provides comprehensive Shiny-based interface grading assignments submitted git repositories containing R Markdown Quarto documents. Features include template creation validation rules, interactive AST tree visualization, question-based grading workflows customizable rubrics hotkeys, automated validation scoring systems, support local directories remote GitHub repositories automatic syncing capabilities.","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"markermd: Interactive Shiny-Based Grading Interface for R Markdown Assignments — markermd-package","text":"Maintainer: Colin Rundel rundel@gmail.com","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_grade_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Grade State S7 Class — markermd_grade_state","title":"Grade State S7 Class — markermd_grade_state","text":"Represents grading state question including current score, total possible points, grading configuration options.","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_grade_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grade State S7 Class — markermd_grade_state","text":"","code":"markermd_grade_state(   current_score = 0,   total_score = 0,   grading_mode = \"positive\",   bound_above_zero = TRUE,   bound_below_max = TRUE )"},{"path":"https://rundel.github.io/markermd/reference/markermd_grade_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grade State S7 Class — markermd_grade_state","text":"current_score Numeric. Current points awarded total_score Numeric. Maximum possible points grading_mode Character. Either \"positive\" \"negative\" grading bound_above_zero Logical. Whether enforce score >= 0 bound_below_max Logical. Whether enforce score <= maximum","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Template Metadata — markermd_metadata","title":"Template Metadata — markermd_metadata","text":"S7 class representing template creation modification metadata","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template Metadata — markermd_metadata","text":"","code":"markermd_metadata(   created_at = Sys.time(),   created_by = Sys.getenv(\"USER\", \"unknown\"),   total_nodes = 0L,   version = \"1.0\" )"},{"path":"https://rundel.github.io/markermd/reference/markermd_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template Metadata — markermd_metadata","text":"created_at POSIXct. Template creation timestamp created_by Character. User created template total_nodes Integer. Total number nodes original AST version Character. Template format version","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"MarkerMD Modal Dialog with Bootstrap 5 Close Button — markermd_modal","title":"MarkerMD Modal Dialog with Bootstrap 5 Close Button — markermd_modal","text":"modified version Shiny's modalDialog adds properly positioned close button header easyClose TRUE.","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MarkerMD Modal Dialog with Bootstrap 5 Close Button — markermd_modal","text":"","code":"markermd_modal(   ...,   title = NULL,   footer = shiny::modalButton(\"Dismiss\"),   size = c(\"m\", \"s\", \"l\", \"xl\"),   easyClose = FALSE,   fade = TRUE )"},{"path":"https://rundel.github.io/markermd/reference/markermd_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MarkerMD Modal Dialog with Bootstrap 5 Close Button — markermd_modal","text":"... UI elements include within modal title Character string. Modal title footer UI elements modal footer (default: modalButton(\"Dismiss\")) size Character. Modal size: \"m\", \"s\", \"l\", \"xl\" easyClose Logical. TRUE, adds close button header allows closing clicking outside fade Logical. TRUE, modal fades /","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_modal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MarkerMD Modal Dialog with Bootstrap 5 Close Button — markermd_modal","text":"Modal dialog HTML structure","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_node_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Node Selection for Questions — markermd_node_selection","title":"Node Selection for Questions — markermd_node_selection","text":"S7 class representing selected AST nodes template question","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_node_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Node Selection for Questions — markermd_node_selection","text":"","code":"markermd_node_selection(indices = integer(0))"},{"path":"https://rundel.github.io/markermd/reference/markermd_node_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Node Selection for Questions — markermd_node_selection","text":"indices Integer vector 1-based AST node indices","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Template Question — markermd_question","title":"Template Question — markermd_question","text":"S7 class representing single template question selected nodes validation rules","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template Question — markermd_question","text":"","code":"markermd_question(   id = integer(0),   name = character(0),   selected_nodes = markermd_node_selection(),   rules = list() )"},{"path":"https://rundel.github.io/markermd/reference/markermd_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template Question — markermd_question","text":"id Integer. Unique question identifier name Character. Question display name selected_nodes node_selection. Selected AST nodes question rules List. Validation rules question markermd_rule objects","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_rubric_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Rubric Item — markermd_rubric_item","title":"Rubric Item — markermd_rubric_item","text":"S7 class representing single rubric item hotkey, points, description selection state","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_rubric_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rubric Item — markermd_rubric_item","text":"","code":"markermd_rubric_item(   hotkey = integer(0),   points = integer(0),   description = character(0),   selected = FALSE )"},{"path":"https://rundel.github.io/markermd/reference/markermd_rubric_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rubric Item — markermd_rubric_item","text":"hotkey Integer. Hotkey number (1-10) keyboard selection points Numeric. Point value rubric item description Character. Description text rubric item selected Logical. Whether item currently selected","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Markermd Validation Rule — markermd_rule","title":"Markermd Validation Rule — markermd_rule","text":"S7 class representing single validation rule template questions. class provides built-validation rule properties ensures consistency across application.","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Markermd Validation Rule — markermd_rule","text":"","code":"markermd_rule(node_type = character(0), verb = character(0), values = NULL)"},{"path":"https://rundel.github.io/markermd/reference/markermd_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Markermd Validation Rule — markermd_rule","text":"node_type Character. type AST node rule applies . Must one values returned get_allowed_node_types(). verb Character. validation verb/action perform. Must one values returned get_allowed_rule_verbs(). values Vector. values/parameters validation. Type format depend verb: \"\": numeric vector length 2 (min, max) \"least\": integer (minimum count) \"\": integer (maximum count) \"content\": character string (pattern) \"lacks content\": character string (pattern) \"name\": character string (pattern)","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_rule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Markermd Validation Rule — markermd_rule","text":"","code":"if (FALSE) { # \\dontrun{ # Create a count rule count_rule = markermd_rule(   node_type = \"rmd_heading\",   verb = \"has between\",    values = c(1, 5) )  # Create a content rule content_rule = markermd_rule(   node_type = \"rmd_chunk\",   verb = \"has content\",   values = \"*plot*\" )  # Validate a rule validation = validate_markermd_rule(count_rule) if (!validation$valid) {   print(validation$errors) } } # }"},{"path":"https://rundel.github.io/markermd/reference/markermd_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Markermd Template — markermd_template","title":"Markermd Template — markermd_template","text":"S7 class representing complete markermd template questions metadata","code":""},{"path":"https://rundel.github.io/markermd/reference/markermd_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Markermd Template — markermd_template","text":"","code":"markermd_template(   original_ast = NULL,   questions = list(),   metadata = markermd_metadata() )"},{"path":"https://rundel.github.io/markermd/reference/markermd_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Markermd Template — markermd_template","text":"original_ast rmd_ast. original parsed AST parsermd questions List question objects metadata template_metadata. Template metadata","code":""},{"path":"https://rundel.github.io/markermd/reference/marking_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Marking Server — marking_server","title":"Marking Server — marking_server","text":"Marking Server","code":""},{"path":"https://rundel.github.io/markermd/reference/marking_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marking Server — marking_server","text":"","code":"marking_server(   id,   ast,   template_obj,   validation_results = shiny::reactiveVal(NULL) )"},{"path":"https://rundel.github.io/markermd/reference/marking_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marking Server — marking_server","text":"id Character. Module namespace ID ast Reactive. parsed AST object template_obj Reactive. markermd_template S7 object questions rules validation_results Reactive. Optional validation results current repository","code":""},{"path":"https://rundel.github.io/markermd/reference/marking_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Marking Interface Module — marking_ui","title":"Marking Interface Module — marking_ui","text":"Shiny module grading assignments Marking UI","code":""},{"path":"https://rundel.github.io/markermd/reference/marking_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marking Interface Module — marking_ui","text":"","code":"marking_ui(id)"},{"path":"https://rundel.github.io/markermd/reference/marking_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marking Interface Module — marking_ui","text":"id Character. Module namespace ID","code":""},{"path":"https://rundel.github.io/markermd/reference/new_markermd_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new markermd rule with default values — new_markermd_rule","title":"Create a new markermd rule with default values — new_markermd_rule","text":"Convenience function create new rule appropriate default values based specified verb type.","code":""},{"path":"https://rundel.github.io/markermd/reference/new_markermd_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new markermd rule with default values — new_markermd_rule","text":"","code":"new_markermd_rule(node_type = \"Any node\", verb = \"has at least\", values = NULL)"},{"path":"https://rundel.github.io/markermd/reference/new_markermd_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new markermd rule with default values — new_markermd_rule","text":"node_type Character. node type (defaults \"node\") verb Character. validation verb (defaults \"least\") values Vector. Custom values (NULL, uses defaults verb)","code":""},{"path":"https://rundel.github.io/markermd/reference/new_markermd_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new markermd rule with default values — new_markermd_rule","text":"markermd_rule object","code":""},{"path":"https://rundel.github.io/markermd/reference/open_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Open folder in system file manager (cross-platform) — open_folder","title":"Open folder in system file manager (cross-platform) — open_folder","text":"Open folder system file manager (cross-platform)","code":""},{"path":"https://rundel.github.io/markermd/reference/open_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open folder in system file manager (cross-platform) — open_folder","text":"","code":"open_folder(folder_path)"},{"path":"https://rundel.github.io/markermd/reference/open_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open folder in system file manager (cross-platform) — open_folder","text":"folder_path Character string. Path folder open","code":""},{"path":"https://rundel.github.io/markermd/reference/parse_assignment_document.html","id":null,"dir":"Reference","previous_headings":"","what":"Document Parsing Utilities — parse_assignment_document","title":"Document Parsing Utilities — parse_assignment_document","text":"Functions parsing Rmd/qmd documents using parsermd Parse Rmd qmd document AST using parsermd","code":""},{"path":"https://rundel.github.io/markermd/reference/parse_assignment_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document Parsing Utilities — parse_assignment_document","text":"","code":"parse_assignment_document(file_path)"},{"path":"https://rundel.github.io/markermd/reference/parse_assignment_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document Parsing Utilities — parse_assignment_document","text":"file_path Character. Path assignment file","code":""},{"path":"https://rundel.github.io/markermd/reference/question_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Question Server — question_server","title":"Question Server — question_server","text":"Question Server","code":""},{"path":"https://rundel.github.io/markermd/reference/question_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Question Server — question_server","text":"","code":"question_server(id, ast, initial_question = NULL)"},{"path":"https://rundel.github.io/markermd/reference/question_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Question Server — question_server","text":"id Character. Module namespace ID ast Reactive. parsed AST object building tree structure initial_question S7 markermd_question object. Optional initial question state","code":""},{"path":"https://rundel.github.io/markermd/reference/question_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Question Module — question_ui","title":"Question Module — question_ui","text":"Shiny module managing single question rules Question UI","code":""},{"path":"https://rundel.github.io/markermd/reference/question_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Question Module — question_ui","text":"","code":"question_ui(id, name_id)"},{"path":"https://rundel.github.io/markermd/reference/question_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Question Module — question_ui","text":"id Character. Module namespace ID name_id Integer. question ID used default naming","code":""},{"path":"https://rundel.github.io/markermd/reference/remove_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Question from Template — remove_question","title":"Remove Question from Template — remove_question","text":"Remove Question Template","code":""},{"path":"https://rundel.github.io/markermd/reference/remove_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Question from Template — remove_question","text":"","code":"remove_question(tmpl, id)"},{"path":"https://rundel.github.io/markermd/reference/remove_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Question from Template — remove_question","text":"tmpl template object id Integer question ID remove","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"S7 Class for Rule Validation — rule_classes","title":"S7 Class for Rule Validation — rule_classes","text":"S7 class representing single validation rule built-validation node type, verb, values based allowed values helper functions.","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Functions for Rule Validation — rule_helpers","title":"Helper Functions for Rule Validation — rule_helpers","text":"Centralized helper functions define allowed values rule validation. functions serve single source truth rule validation values.","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Rule Server — rule_server","title":"Rule Server — rule_server","text":"Rule Server","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rule Server — rule_server","text":"","code":"rule_server(id, initial_rule = NULL)"},{"path":"https://rundel.github.io/markermd/reference/rule_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rule Server — rule_server","text":"id Character. Module namespace ID initial_rule List. Initial rule data (optional)","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert rule object to list format — rule_to_list","title":"Convert rule object to list format — rule_to_list","text":"Converts markermd_rule S7 object list format used existing rules module backward compatibility. Converts S7 markermd_rule object list format expected rules module. used loading existing templates template interface.","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert rule object to list format — rule_to_list","text":"","code":"rule_to_list(rule, rule_id)  rule_to_list(rule, rule_id)"},{"path":"https://rundel.github.io/markermd/reference/rule_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert rule object to list format — rule_to_list","text":"rule S7 markermd_rule object rule_id Integer. ID assign rule list format","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert rule object to list format — rule_to_list","text":"Named list rule data List rule data formatted rules module","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Rule Module — rule_ui","title":"Rule Module — rule_ui","text":"Shiny module managing validation rule Rule UI","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rule Module — rule_ui","text":"","code":"rule_ui(id, initial_rule = NULL)"},{"path":"https://rundel.github.io/markermd/reference/rule_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rule Module — rule_ui","text":"id Character. Module namespace ID initial_rule markermd_rule object. Initial rule setting default values (optional)","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_ui_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Rule UI without server module (direct input handling) — rule_ui_direct","title":"Rule UI without server module (direct input handling) — rule_ui_direct","text":"Rule UI without server module (direct input handling)","code":""},{"path":"https://rundel.github.io/markermd/reference/rule_ui_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rule UI without server module (direct input handling) — rule_ui_direct","text":"","code":"rule_ui_direct(id, rule, ns = NULL)"},{"path":"https://rundel.github.io/markermd/reference/rule_ui_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rule UI without server module (direct input handling) — rule_ui_direct","text":"id Character. rule ID input naming rule markermd_rule S7 object. rule display ns Function. Namespace function proper input scoping","code":""},{"path":"https://rundel.github.io/markermd/reference/setup_assignment_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Git Operations Utilities — setup_assignment_repo","title":"Git Operations Utilities — setup_assignment_repo","text":"Functions handling git repositories markermd Handles local directories remote GitHub repositories","code":""},{"path":"https://rundel.github.io/markermd/reference/setup_assignment_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git Operations Utilities — setup_assignment_repo","text":"","code":"setup_assignment_repo(   assignment_path,   local_dir = NULL,   is_github_repo = FALSE )"},{"path":"https://rundel.github.io/markermd/reference/setup_assignment_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Git Operations Utilities — setup_assignment_repo","text":"assignment_path Character. Local path \"owner/repo\" format local_dir Character. Local directory cloning (required remote) is_github_repo Logical. Whether GitHub repo","code":""},{"path":"https://rundel.github.io/markermd/reference/sync_archives.html","id":null,"dir":"Reference","previous_headings":"","what":"Sync archives (update only out-of-date files) — sync_archives","title":"Sync archives (update only out-of-date files) — sync_archives","text":"Sync archives (update --date files)","code":""},{"path":"https://rundel.github.io/markermd/reference/sync_archives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sync archives (update only out-of-date files) — sync_archives","text":"","code":"sync_archives(   github_repos,   repo_to_github,   collection_path,   progress_callback = NULL )"},{"path":"https://rundel.github.io/markermd/reference/sync_archives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sync archives (update only out-of-date files) — sync_archives","text":"github_repos Character vector. GitHub repositories sync repo_to_github Named list. Mapping local repo names GitHub repos collection_path Character string. Path collection directory progress_callback Function. Optional callback progress updates","code":""},{"path":"https://rundel.github.io/markermd/reference/sync_archives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sync archives (update only out-of-date files) — sync_archives","text":"List success status results","code":""},{"path":"https://rundel.github.io/markermd/reference/template.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the markermd Template Creation Application — template","title":"Launch the markermd Template Creation Application — template","text":"Launch markermd Template Creation Application","code":""},{"path":"https://rundel.github.io/markermd/reference/template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the markermd Template Creation Application — template","text":"","code":"template(assignment_path, local_dir = NULL, filename = \"*.[Rq]md\", ...)"},{"path":"https://rundel.github.io/markermd/reference/template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the markermd Template Creation Application — template","text":"assignment_path Assignment source existing template. Can : Character path local directory containing assignment Character GitHub repo format \"owner/repo\" Character path .rds file containing markermd_template markermd_template S7 object local_dir Character string. Local directory cloning (required remote GitHub repos, ignored templates) filename Character string. Glob pattern match Rmd/qmd file grade (ignored templates). Default glob matches .Rmd .qmd file. ... Additional arguments passed shiny::runApp()","code":""},{"path":"https://rundel.github.io/markermd/reference/template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the markermd Template Creation Application — template","text":"Launches Shiny application template creation","code":""},{"path":"https://rundel.github.io/markermd/reference/template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the markermd Template Creation Application — template","text":"","code":"if (FALSE) { # \\dontrun{ # Local assignment with default pattern template(\"/path/to/assignment\")  # Local assignment with specific filename template(\"/path/to/assignment\", filename = \"homework.Rmd\")  # Remote GitHub repo template(\"username/repo-name\", local_dir = \"/tmp/grading\", filename = \"assignment.qmd\")  # Load existing template from file template(\"/path/to/saved_template.rds\")  # Load existing template from S7 object my_template = readRDS(\"/path/to/template.rds\") template(my_template) } # }"},{"path":"https://rundel.github.io/markermd/reference/template_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Template App — template_app","title":"Template App — template_app","text":"Main Shiny application creating assignment templates Template App UI","code":""},{"path":"https://rundel.github.io/markermd/reference/template_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template App — template_app","text":"","code":"template_app(ast, template_obj = NULL)"},{"path":"https://rundel.github.io/markermd/reference/template_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template App — template_app","text":"ast Reactive. parsed AST object template_obj markermd_template S7 object. Optional template load startup","code":""},{"path":"https://rundel.github.io/markermd/reference/template_app_standalone.html","id":null,"dir":"Reference","previous_headings":"","what":"Standalone Template App with Navbar — template_app_standalone","title":"Standalone Template App with Navbar — template_app_standalone","text":"Template app wrapped navbar standalone use","code":""},{"path":"https://rundel.github.io/markermd/reference/template_app_standalone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standalone Template App with Navbar — template_app_standalone","text":"","code":"template_app_standalone(ast, template_obj = NULL, assignment_path = NULL)"},{"path":"https://rundel.github.io/markermd/reference/template_app_standalone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standalone Template App with Navbar — template_app_standalone","text":"ast Reactive. parsed AST object template_obj markermd_template S7 object. Optional template load startup assignment_path Character. Path display footer","code":""},{"path":"https://rundel.github.io/markermd/reference/template_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"S7 Class Definitions for Markermd Templates — template_classes","title":"S7 Class Definitions for Markermd Templates — template_classes","text":"S7 classes representing markermd template structures automatic validation. classes replace previous list-based template format type-safe objects provide built-validation better error messages.","code":""},{"path":"https://rundel.github.io/markermd/reference/template_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for Markermd Template Classes — template_methods","title":"Methods for Markermd Template Classes — template_methods","text":"Methods S7 template classes including validation, conversion, printing, serialization support.","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_markermd_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a markermd rule object — validate_markermd_rule","title":"Validate a markermd rule object — validate_markermd_rule","text":"Manually validate rule object return detailed error information. useful debugging providing user feedback.","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_markermd_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a markermd rule object — validate_markermd_rule","text":"","code":"validate_markermd_rule(rule)"},{"path":"https://rundel.github.io/markermd/reference/validate_markermd_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a markermd rule object — validate_markermd_rule","text":"rule markermd_rule object validate","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_markermd_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a markermd rule object — validate_markermd_rule","text":"List 'valid' (logical) 'errors' (character vector) components","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_node_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate node type value — validate_node_type","title":"Validate node type value — validate_node_type","text":"Checks node type valid according allowed types.","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_node_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate node type value — validate_node_type","text":"","code":"validate_node_type(node_type)"},{"path":"https://rundel.github.io/markermd/reference/validate_node_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate node type value — validate_node_type","text":"node_type Character. node type validate","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_node_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate node type value — validate_node_type","text":"Character error message invalid, NULL valid","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_rule_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate rule values based on verb type — validate_rule_values","title":"Validate rule values based on verb type — validate_rule_values","text":"Validates rule values according specific requirements verb type. Different verbs different value requirements (numeric ranges, text patterns, etc.).","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_rule_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate rule values based on verb type — validate_rule_values","text":"","code":"validate_rule_values(verb, values)"},{"path":"https://rundel.github.io/markermd/reference/validate_rule_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate rule values based on verb type — validate_rule_values","text":"verb Character. rule verb determines validation requirements values List vector. values validate","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_rule_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate rule values based on verb type — validate_rule_values","text":"Character error message invalid, NULL valid","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_rule_verb.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate rule verb value — validate_rule_verb","title":"Validate rule verb value — validate_rule_verb","text":"Checks rule verb valid according allowed verbs.","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_rule_verb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate rule verb value — validate_rule_verb","text":"","code":"validate_rule_verb(verb)"},{"path":"https://rundel.github.io/markermd/reference/validate_rule_verb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate rule verb value — validate_rule_verb","text":"verb Character. verb validate","code":""},{"path":"https://rundel.github.io/markermd/reference/validate_rule_verb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate rule verb value — validate_rule_verb","text":"Character error message invalid, NULL valid","code":""}]
